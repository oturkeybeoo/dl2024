# -*- coding: utf-8 -*-
"""VGG19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Dw8wup4JmQzDeYi5ULyucKBofY-P_PxB
"""

from google.colab import drive
drive.mount('/content/drive')

!unzip /content/drive/MyDrive/archive.zip

import tensorflow as tf
from tensorflow.keras.layers import InputLayer, Conv2D, MaxPooling2D, Flatten, Dense

train_dataset, validation_dataset = tf.keras.preprocessing.image_dataset_from_directory(
    directory="/content/raw-img",
    class_names=['cane', 'cavallo', 'elefante', 'farfalla', 'gallina', 'gatto', 'mucca', 'pecora', 'ragno', 'scoiattolo'],
    seed=12,
    validation_split=0.3,
    subset="both"
    )

def define_model():
  #1
  model = tf.keras.models.Sequential()
  model.add(InputLayer(input_shape=(256,256,3)))
  model.add(Conv2D(64, (3,3), activation="relu"))
  model.add(Conv2D(64, (3,3), activation="relu"))
  model.add(MaxPooling2D())
  #2
  model.add(Conv2D(128, (3,3)))
  model.add(Conv2D(128, (3,3)))
  model.add(MaxPooling2D())
  #3
  model.add(Conv2D(256, (3,3)))
  model.add(Conv2D(256, (3,3)))
  model.add(Conv2D(256, (3,3)))
  model.add(Conv2D(256, (3,3)))
  model.add(MaxPooling2D())
  #4
  model.add(Conv2D(512, (3,3)))
  model.add(Conv2D(512, (3,3)))
  model.add(Conv2D(512, (3,3)))
  model.add(Conv2D(512, (3,3)))
  model.add(MaxPooling2D())
  #model.add(Conv2D(512, (3,3)))
  #model.add(Conv2D(512, (3,3)))
  #model.add(Conv2D(512, (3,3)))
  #model.add(Conv2D(512, (3,3)))
  #model.add(MaxPooling2D())
  #model.add(Dense(4096))
  model.add(Flatten())
  model.add(Dense(512, activation="softmax"))
  return model

model = define_model()

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

history = model.fit(train_dataset, epochs=10, validation_data=validation_dataset)

test_loss, test_acc = model.evaluate(test_dataset)

cane_dataset = tf.keras.preprocessing.image_da("/content/raw-img/cane")

validation_dataset.take(1)